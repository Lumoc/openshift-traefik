# persistentVolumeClaim


# it is possible to use traefik with a Deployment or DaemonSet
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: traefik-ingress
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-serviceaccount
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256M
          requests:
            cpu: 100m
            memory: 256M
        volumeMounts:
          - name: traefik-config-dir
            mountPath: /etc/traefik
          - name: acme
            mountPath: /acme/acme.json
      securityContext:
      # Change this if you want to bind a persistent volume claim
      volumes:
        - name: traefik-config-dir
          configMap:
            name: traefik-config
            items:
              - key: traefik.toml
                path: traefik.toml
        - name: acme
          persistentVolumeClaim:
            claimName: acme-conf

---
kind: Service
apiVersion: v1
metadata:
  namespace: traefik-ingress
  name: traefik-ingress-service
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 8080
      name: web
    - protocol: TCP
      port: 8081
      name: admin
    - protocol: TCP
      port: 8443
      name: secure-web
  type: NodePort
